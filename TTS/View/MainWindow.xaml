<Window x:Class="TTS.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:vm="clr-namespace:TTS.ViewModel"
        xmlns:c="clr-namespace:TTS.Converter"
        xmlns:e="clr-namespace:TTS.Extension"
        mc:Ignorable="d"
        Title="TTS" Height="450" Width="800">
    <Window.Resources>
        <vm:MainPageViewModel x:Key="MainPageViewModel" />
        <c:IsRunningToStringConverter x:Key="IsRunningToStringConverter" />
    </Window.Resources>
    <Window.DataContext>
        <vm:MainPageViewModel/>
    </Window.DataContext>
    <DockPanel>
        <Menu DockPanel.Dock="Top">

            <MenuItem Header="_File">
                <MenuItem Header="New" Command="{Binding NewDocumentCommand}"/>
                <MenuItem Header="Open" Command="{Binding OpenDuumentCommand}"/>
                <Separator/>
                <MenuItem Header="Save" Command="{Binding SaveDocumentCommand}"/>
                <MenuItem Header="Save As..." Command="{Binding SaveAsDocumentCommand}"/>
                <Separator/>
                <MenuItem Header="_Close" Command="{Binding WindowCloseCommand}" 
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Cut" Command="Cut"/>
                <MenuItem Header="Copy" Command="Copy"/>
                <MenuItem Header="Paste" Command="Paste"/>
            </MenuItem>
            <MenuItem Header="Export">
                <MenuItem Header="Export to .wav" Command="{Binding ExportToWavCommand}"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="About" Command="{Binding AboutCommand}"/>
            </MenuItem>

        </Menu>
        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="13*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Column="0" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="4*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Column="0" Grid.Row="0" Margin="10">Rate</Label>
                <Slider Grid.Column="1" Grid.Row="0" Margin="10" Maximum="10" Minimum="-10" TickFrequency="1" Value="{Binding Path=Rate, Mode=TwoWay}"></Slider>

                <Label Grid.Column="0" Grid.Row="1" Margin="10">Volume</Label>
                <Slider Grid.Column="1" Grid.Row="1" Margin="10" Minimum="0" Maximum="100" TickFrequency="1" Value="{Binding Path=Volume, Mode=TwoWay}"></Slider>

                <Label Grid.Column="0" Grid.Row="2" Margin="10">Voice</Label>
                <ComboBox Grid.Column="1" Grid.Row="2" Margin="10" ItemsSource="{Binding Path=Voices}" SelectedValue="{Binding Path=SelectedVoice, Mode=TwoWay}"></ComboBox>

                <Grid Grid.ColumnSpan="2" Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Margin="8" Grid.Column="0" Command="{Binding Path=PlayCommand}">Play</Button>
                    <Button Margin="8" Grid.Column="1" Command="{Binding Path=PauseCommand}" Content="{Binding Path=IsRunning, Mode=TwoWay, Converter={StaticResource IsRunningToStringConverter}}"></Button>
                    <Button Margin="8" Grid.Column="2" Command="{Binding Path=StopCommand}">Stop</Button>
                </Grid>
            </Grid>

            <Grid Grid.Column="1" Grid.Row="0" Margin="10">
                <TextBox x:Name="TextBox" Text="{Binding Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" 
                         e:FocusExtension.IsFocused="{Binding Path=IsRunning, Mode=OneWay}"
                         VerticalScrollBarVisibility="Auto">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=SetCursorCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </Grid>

            <StatusBar Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Caret Index: "></TextBlock>
                        <TextBlock Width="50" Name="CaretIndex" Text="{Binding Path=CaretIndex, Mode=OneWay}" FontWeight="Bold"></TextBlock>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Current text: "></TextBlock>
                        <TextBlock Width="100" Name="CurrentText" Text="{Binding Path=CurrentReadedText, Mode=OneWay}" FontWeight="Bold"></TextBlock>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Progress: "></TextBlock>
                        <ProgressBar Grid.Column="1" Name="ProgressBar" Width="100" Height="15"  Minimum ="0" Maximum="100" Value="{Binding Path=ReadProgress, Mode=OneWay}"></ProgressBar>
                        <TextBlock Grid.Column="1" Text="{Binding  Path=ReadProgress, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </StatusBarItem>

            </StatusBar>
        </Grid>
    </DockPanel>
</Window>
